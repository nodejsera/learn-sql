3.1=> 
 SELECT title FROM film;


3.2
SELECT first_name as "First Name",last_name "Last Name"
FROM actor;

3.3
SELECT * FROM inventory;

3.4
select actor_id, first_name, last_name, last_update 
from actor;



Exercise 2:
3.5
select first_name, length(first_name) as "length"
from customer;

3.6
select first_name, last_name, left(first_name, 1) || left(last_name, 1) as "initial"
from customer;

3.7
select 
    title, 
    rental_rate, 
    replacement_cost, 
    ceil( replacement_cost / rental_rate ) as "# rentals to break-even"
from film;


3.8
select title, rating from film where rating = 'G';	

3.9
select title, length from film where length > 120;	

3.10
select rental_id ,rental_date length from rental where rental_date < '2005-07-01';	

3.11
select 
    title, 
    rental_rate, 
    replacement_cost, 
    ceil( replacement_cost / rental_rate ) as "# rentals to break-even"
from film
where ceil( replacement_cost / rental_rate ) > 30

3.12
select 
    rental_id , rental_date 
from rental
where customer_id = 388 
	and ( rental_date > '2004-12-31' and rental_date < '2006-01-01' );

3.13
1)
select title, rental_duration, length
from film
where not length <= 60;
2)
select title, rental_duration, length
from film
where length <= 60;

3.14
1) and 2) produces different results because in 1) we have AND operator and in 2) we have OR operator.
1)
select title, rating
from film
where rating != 'G'
  and rating != 'PG';
  //Gives no result because no single film can have 2 ratings
2)
select title, rating
from film
where rating != 'G'
  or rating != 'PG';


3.15
select * from rental r 
where return_date > rental_date or return_date < rental_date or return_date = rental_date;


3.16
select rental_id, return_date from rental r 
where return_date is null;

3.17
select title , rating from film f2 
where  rating != 'G' and rating != 'PG' or rating is null;

3.18
select title , rating from film f2 
where  rating in ('G', 'PG', 'PG-13');


3.19
select title, length
from film
where length between 90 and 120;

3.20
select title, length
from film
where title like '%GRAFFITI';

3.21
select title , rating from film f2 
where  rating not in ('G', 'PG');


3.22
select first_name , last_name , email 
from customer c 
where email is not null
order by left(last_name , 1) desc ;


3.23
select country_id , city 
from city c2 
order by country_id , city ;

3.24
select concat(first_name, ' ', last_name) as "full name", length(concat(first_name, ' ', last_name)) as "name_length"
from actor a2 
order by name_length desc ;

3.25
In x, y desc : X will be ordered by asc and y will be ordered by desc. However
In x desc, y desc: Both will be ordered by desc.

3.26
select rental_id, date_part('hour', rental_date) as "rental hour"
from rental
where date_part('hour', rental_date) >= 22;

3.27
select payment_date ,payment_id 
from payment p 
order by payment_date desc
limit 3;


3.28
select title, length
from film
where rating <> 'R' OR rating is NULL
order by length, title
limit 4;


3.29
select payment_id , amount, payment_date 
from payment p2 
where payment_date between '2006-12-31' and '2007-02-01'
order by payment_date desc
limit 3;


3.30
Cant do it

3.31
select distinct rating 
from film
where rating  is not null
order by rating;

3.32 [Doubtful--> Correct]
select distinct date_part('hour', rental_date) as "rental_time"
from rental r2
order by rental_time;

3.33
select distinct rental_duration , rental_rate 
from film f2
order by rental_duration ;

3.34
select distinct first_name
from actor
order by last_name;

This query doesnt work because the distinct field must exist in the select clause in order for it to run. [WRONG ANSWER]

[CORRECT ANSWER]
Unable to determine the ordering of the data if we use distinct due to which avoid using ordering on fields which are not present in select clause.


3.35
select distinct rating,
case rating 
	when 'G' then 'General'
	when 'PG' then 'Parental Guidance Recommended'
	when 'PG-13' then 'Parents Strongly Cautioned'
	when 'R' then 'Restricted'
	when 'NC-17' then 'Adults Only'
end as "rating description"
from film
where rating  is not null
order by rating;

3.36
select rental_id , rental_date , return_date,
case 
	when  return_date is null then 'not returned'
	else 'returned'
end as "rental_status"
from rental r2
order by rental_status;


3.37
select country
from country
order by
  case country
    when 'Australia' then 0
    when 'United Kingdom' then 1
    when 'United States' then 2
    else 3
  end, country;
